vcl 4.1;

backend default {
    .host = "{{ varnish_backend_host }}";
    .port = "{{ varnish_backend_port }}";
    .connect_timeout = 60s;
    .first_byte_timeout = 60s;
    .between_bytes_timeout = 60s;
    .max_connections = 800;
}

sub vcl_recv {
    # Remove has_js and CloudFlare/Google Analytics __* cookies and statcounter cookies.
    set req.http.Cookie = regsuball(req.http.Cookie, "(^|;\s*)(_[_a-z]+|has_js|__[_a-z]+|__utm[a-z_]+|_ga|__qca|__atuv[c-z]+)=[^;]*", "");
    # Remove a ";" prefix, if present.
    set req.http.Cookie = regsub(req.http.Cookie, "^;\s*", "");

    # For static content strip all backend cookies
    if (req.url ~ "\.(css|js|png|gif|jp(e)?g|swf|ico|pdf|mov|fla|zip|rar)(\?.*)?$") {
        unset req.http.Cookie;
    }

    # Don't cache HTTP authentication and HTTP Cookie
    if (req.http.Authorization || req.http.Cookie) {
        return (pass);
    }

    # Cache static content
    if (req.url ~ "\.(css|js|png|gif|jp(e)?g|swf|ico|pdf|mov|fla|zip|rar)(\?.*)?$") {
        return (hash);
    }

    # Don't cache dynamic content
    if (req.url ~ "wp-admin|wp-login|phpmyadmin") {
        return (pass);
    }
}

sub vcl_backend_response {
    # Set ban-lurker friendly custom headers
    set beresp.http.X-Url = bereq.url;
    set beresp.http.X-Host = bereq.http.host;

    # Don't cache 50x responses
    if (beresp.status == 500 || beresp.status == 502 || beresp.status == 503 || beresp.status == 504) {
        return (abandon);
    }

    # Set cache TTL for static content
    if (bereq.url ~ "\.(css|js|png|gif|jp(e)?g|swf|ico|pdf|mov|fla|zip|rar)(\?.*)?$") {
        set beresp.ttl = 1w;
        set beresp.http.cache-control = "public, max-age=604800";
    }

    # Set cache TTL for HTML content
    if (beresp.http.content-type ~ "text/html") {
        set beresp.ttl = 5m;
    }
}

sub vcl_deliver {
    # Remove ban-lurker friendly custom headers when delivering to client
    unset resp.http.X-Url;
    unset resp.http.X-Host;

    # Add cache hit info
    if (obj.hits > 0) {
        set resp.http.X-Varnish-Cache = "HIT";
    } else {
        set resp.http.X-Varnish-Cache = "MISS";
    }

    # Remove internal headers
    unset resp.http.Via;
    unset resp.http.X-Varnish;
}
